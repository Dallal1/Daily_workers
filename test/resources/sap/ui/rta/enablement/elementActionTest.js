/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/ui/core/mvc/XMLView","sap/ui/core/ComponentContainer","sap/ui/core/UIComponent","sap/ui/dt/DesignTime","sap/ui/dt/DesignTimeStatus","sap/ui/dt/OverlayRegistry","sap/ui/fl/registry/Settings","sap/ui/fl/write/api/PersistenceWriteAPI","sap/ui/fl/Layer","sap/ui/model/Model","sap/ui/rta/command/CommandFactory","sap/ui/rta/util/changeVisualization/ChangeCategories","sap/ui/rta/util/changeVisualization/ChangeVisualization","sap/ui/qunit/utils/nextUIUpdate","sap/ui/thirdparty/sinon-4","test-resources/sap/ui/fl/api/FlexTestAPI","test-resources/sap/ui/fl/qunit/FlQUnitUtils","sap/ui/fl/library"],function(e,t,n,i,a,o,s,r,c,l,h,d,m,u,g,f,p){"use strict";function C(w,y){if(C._only&&w.indexOf(C._only)<0){return}if(typeof y.xmlView==="string"){y.xmlView={viewContent:y.xmlView}}const v=g.createSandbox();y.before||=function(){};y.after||=function(){};QUnit.module(w,function(){QUnit.test("When using the 'elementActionTest' function to test if your control is ready for UI adaptation at runtime",function(e){e.ok(y.afterAction,"then you implement a function to check if your action has been successful: See the afterAction parameter.");e.ok(y.afterUndo,"then you implement a function to check if the undo has been successful: See the afterUndo parameter.");e.ok(y.afterRedo,"then you implement a function to check if the redo has been successful: See the afterRedo parameter.");e.ok(y.xmlView,"then you provide an XML view to test on: See the.xmlView parameter.");const t=(new DOMParser).parseFromString(y.xmlView.viewContent,"application/xml").documentElement;e.ok(t.tagName.match("View$"),"then you use the sap.ui.core.mvc View tag as the first tag in your view");e.ok(y.action,"then you provide an action: See the action parameter.");e.ok(y.action.name,"then you provide an action name: See the action.name parameter.");e.ok(y.action.controlId||y.action.control,"then you provide the control or control's id to operate the action on: See the action.controlId.")})});const b="sap.ui.rta.control.enabling.comp";const V=false;const A=true;const x=n.extend(b,{metadata:{interfaces:["sap.ui.core.IAsyncContentCreation"],manifest:{"sap.app":{id:b,type:"application"}}},createContent(){const t=Object.assign({},y.xmlView);t.id=this.createId("view");if(t.async===undefined){t.async=this.getComponentData().async}t.definition=t.viewContent;this.oViewPromise=e.create(t);return this.oViewPromise}});function U(e){this.oUiComponent=new x({id:"comp",componentData:{async:e}});return this.oUiComponent.oViewPromise.then(async function(){this.oUiComponentContainer=new t({component:this.oUiComponent,height:"100%"});this.oUiComponentContainer.placeAt(y.placeAt||"qunit-fixture");this.oView=this.oUiComponent.getRootControl();if(y.model instanceof l){this.oView.setModel(y.model)}await u();return y.model&&y.model.getMetaModel()&&y.model.getMetaModel().loaded()}.bind(this))}function I(e){const t=[].concat(y.previousActions||[],y.action);const n=[];return t.reduce(function(t,i){return t.then(M.bind(this,e,i)).then(function(e){n.push(e);return e.execute()})}.bind(this),Promise.resolve()).then(function(){return n})}function E(e){if(typeof e.control==="function"){return e.control(this.oView)}return this.oView.byId(e.controlId)}function P(e){return e.designtimeActionControl?e.designtimeActionControl(this.oView):undefined}function k(){this.oDesignTime=new i({rootElements:[this.oView]});return new Promise(function(e){this.oDesignTime.attachEventOnce("synced",e)}.bind(this))}function D(e){if(e){return typeof e==="function"?e(this.oView):e}return{}}function S(e,t,n,i,a,o){if(Array.isArray(t.name)){const i=a.getAction(t.name[0],n,t.name[1]);e.ok(i,`the ${t[0]} via ${t.name[1]} action is available in the designtime`)}else if(t.name==="createContainer"||t.name==="addIFrame"){e.ok(o.getAction(t.name,n),`the ${t.name}action is available in the calculated designtime metadata during execution`)}else if(t.name==="move"){e.ok(a.getAction(t.name,i),`the ${t.name}action is available in the calculated designtime metadata during execution`)}else{e.ok(a.getAction(t.name,n),`the ${t.name}action is available in the calculated designtime metadata during execution`)}}async function M(e,t){try{let n=t.name;let i;let a;let s=await E.call(this,t);const r=D.call(this,t.parameter);const l=await P.call(this,t);await k.call(this);let d=o.getOverlay(l||s);if(!d){throw new Error(`The provided control ${s.getId()}does not have any overlay existing during test execution. `+`With this testsetup it is no possible to check for designtime action definition. In some cases it is not `+`possible to identify the control with the designtime metadata automatically just by the given 'action.control'. `+`In this case please provide the 'action.designtimeActionControl' property with a valid control containing `+`the designtime metadata definition for this check.`)}let m=d.getDesignTimeMetadata();const u=m.getResponsibleElement(s);if(y.label){e.strictEqual(m.getLabel(s),y.label,"then the control label is correct")}if(t.name==="move"){a=r.movedElements[0].element||r.movedElements[0].id;const e=o.getOverlay(a);const t=e.getRelevantContainer();s=t;m=e.getParentAggregationOverlay().getDesignTimeMetadata()}else if(Array.isArray(t.name)){const e=m.getActionDataFromAggregations(t.name[0],s,undefined,t.name[1]);const i=d.getAggregationOverlay(e[0].aggregation);m=i.getDesignTimeMetadata();n="addDelegateProperty"}else if(t.name==="createContainer"||t.name==="addIFrame"){const e=m.getActionDataFromAggregations(t.name,l||s);const n=d.getAggregationOverlay(e[0].aggregation);i=n.getDesignTimeMetadata()}else if(u){if(t.name==="reveal"){s=t.revealedElement(this.oView);d=o.getOverlay(t.revealedElement(this.oView));m=d.getDesignTimeMetadata();if(t.label){const n=m.getAction("reveal");e.strictEqual(n.getLabel(s),t.label,"then the control label is correct")}}else{s=u;d=o.getOverlay(s);m=d.getDesignTimeMetadata();s.getMetadata().loadDesignTime(s)}}S(e,t,s,a,m,i);const g=new h({flexSettings:{layer:y.layer||c.CUSTOMER}});const f=await g.getCommandFor(s,n,r,m);e.ok(f,`then the registration for action to change type, the registration for change and `+`control type to change handler is available and ${y.action.name} is a valid action`);return f}catch(e){throw new Error(e)}}function T(e){return e.reduce(function(e,t){return e.then(t.execute.bind(t))},Promise.resolve())}function O(e){const t=e.slice().reverse();return t.reduce(function(e,t){return e.then(t.undo.bind(t))},Promise.resolve())}function R(e){e.forEach(e=>{e.destroy()})}async function z(e,t,n){const i={remainingCommands:[],deletedCommands:[]};if(t.length===1){i.remainingCommands.push(t[0]);return Promise.resolve(i)}const a=t.map(e=>e.getPreparedChange());const o=await r._condense({selector:e,changes:a});if(y.changesAfterCondensing!==undefined){n.equal(o.length,y.changesAfterCondensing,"after condensing the amount of changes is correct")}const s=o.map(e=>e.getId());t.forEach(e=>{if(s.indexOf(e.getPreparedChange().getId())>-1){i.remainingCommands.push(e)}else{i.deletedCommands.push(e)}});return i}async function W(e,t,n){if(!y.changeVisualization){return}let i;if(typeof y.changeVisualization==="function"){i=y.changeVisualization(e)}else{i=y.changeVisualization}const a=new m({rootControlId:e.getId(),isActive:true});v.stub(a,"_updateChangeIndicators");const o=t.map(e=>e.getPreparedChange());v.stub(a,"_collectChanges").resolves(o);await a._updateChangeRegistry();await a._selectChangeCategory(d.ALL);const s=a._oChangeIndicatorRegistry;const r=s.getSelectorsWithRegisteredChanges();const c=i.displayElementId;const l=c?e.createId(c):e.getId();n.ok(r[l]&&r[l].length,"there is a change indicator at the correct element");const h=s.getAllRegisteredChanges()[0];const u=i.info;function g(t){return t.map(t=>e.createId(t))}if(u){if(u.affectedControls){const e=g(u.affectedControls);n.deepEqual(e,h.visualizationInfo.affectedElementIds,"then the affected control ids are correct")}if(u.dependentControls){const e=g(u.dependentControls);n.deepEqual(e,h.visualizationInfo.dependentElementIds,"then the dependent control ids are correct")}if(u.displayControls){const e=g(u.displayControls);n.deepEqual(e,h.visualizationInfo.displayElementIds,"then the display control ids are correct")}if(u.descriptionPayload){n.deepEqual(u.descriptionPayload,h.visualizationInfo.descriptionPayload,"then the descriptionPayload is correct")}}}function F(e){const t=[];e.forEach(function(e){const n=e.getPreparedChange();if(e.getAppComponent){t.push(r.remove({change:n,selector:e.getAppComponent()}))}});return Promise.all(t)}async function Q(e){await U.call(this,V);await _.call(this,e)}function _(e){const t=[].concat(y.previousActions||[],y.action);const n=[];let i;return t.reduce(function(t,a){return t.then(M.bind(this,e,a)).then(function(e){n.push(e);i=e.getAppComponent();this.oUiComponentContainer.destroy();r.add({change:e.getPreparedChange(),selector:i});return U.call(this,A)}.bind(this))}.bind(this),Promise.resolve()).then(function(){this.aCommands=n;const e=n.map(e=>e.getPreparedChange());return r.remove({flexObjects:e,selector:i})}.bind(this))}if(!y.jsOnly){QUnit.module(`${w} on async views`,{before(e){this.hookContext={};return y.before.call(this.hookContext,e)},after(e){return y.after.call(this.hookContext,e)},async beforeEach(){await p.initializeFlexStateWithData(v,b,{changes:[]});v.stub(s,"getInstance").resolves({_oSettings:{}})},afterEach(){this.oUiComponentContainer.destroy();this.oDesignTime.destroy();R(this.aCommands);f.reset();v.restore()}},function(){QUnit.test("When applying the change directly on the XMLView",async function(e){await Q.call(this,e);await W(this.oView,this.aCommands,e);await y.afterAction(this.oUiComponent,this.oView,e)});QUnit.test("When executing on XML and reverting the change in JS (e.g. variant switch)",async function(e){await Q.call(this,e);await O(this.aCommands);await F(this.aCommands);await u();await y.afterUndo(this.oUiComponent,this.oView,e)});QUnit.test("When executing on XML, reverting the change in JS (e.g. variant switch) and applying again",async function(e){await Q.call(this,e);const t=await z(this.oView,this.aCommands,e);this.aRemainingCommands=t.remainingCommands;await O(this.aCommands);await F(this.aCommands);await T(this.aRemainingCommands);await u();await y.afterRedo(this.oUiComponent,this.oView,e)})})}function q(e){if(e.getStatus()!==a.SYNCED){return new Promise(function(t){e.attachEventOnce("synced",t)})}return Promise.resolve()}QUnit.module(w,{before(e){this.hookContext={};return y.before.call(this.hookContext,e)},after(e){return y.after.call(this.hookContext,e)},async beforeEach(e){await p.initializeFlexStateWithData(v,b,{changes:[]});v.stub(s,"getInstance").returns(Promise.resolve({_oSettings:{}}));return U.call(this,V).then(I.bind(this,e)).then(function(e){this.aCommands=e}.bind(this))},afterEach(){this.oDesignTime.destroy();this.oUiComponentContainer.destroy();R(this.aCommands);f.reset();v.restore()}},function(){QUnit.test("When executing the underlying command on the control at runtime",async function(e){await q(this.oDesignTime);await W(this.oView,this.aCommands,e);await u();await y.afterAction(this.oUiComponent,this.oView,e)});QUnit.test("When executing and undoing the command",async function(e){await q(this.oDesignTime);await O(this.aCommands);await F(this.aCommands);await u();await y.afterUndo(this.oUiComponent,this.oView,e)});QUnit.test("When executing, undoing and redoing the command",async function(e){await q(this.oDesignTime);const t=await z(this.oView,this.aCommands,e);this.aRemainingCommands=t.remainingCommands;await O(this.aCommands);await F(this.aCommands);await T(this.aRemainingCommands);await u();await y.afterRedo(this.oUiComponent,this.oView,e)})})}C.skip=function(){};C.only=function(e){C._only=e};return C});
//# sourceMappingURL=elementActionTest.js.map